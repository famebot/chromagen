{"version":3,"file":"chromagen.modern.js","sources":["../src/index.js"],"sourcesContent":["// Returns a random integer between min (included) and max (included)\n// Math.floor because Math.round() yields non-uniform distribution\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/random\nconst getRandomIntInclusive = (min, max) => {\n\treturn Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\nexport default () => {\n\t// Seed the primary color\n\tconst hue = getRandomIntInclusive(1, 359);\n\t// Comment out above line and uncomment below to test specific values\n\t// var hue = 9; // 128 173 (test values)\n\n\t// Derive complement (secondary) hue\n\tvar complement = hue > 180 ? hue - 180 : hue + 179;\n\n\t// analogous (tertiary) hue\n\tvar analogous;\n\tswitch (hue) {\n\t\tcase hue < 135:\n\t\t\tanalogous = hue + 224;\n\t\t\tbreak;\n\t\tcase hue > 224:\n\t\t\tanalogous = hue - 223;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tvar shift = hue + 225;\n\t\t\tanalogous = shift > 359 ? shift - 359 : shift;\n\t}\n\n\t// Seed random saturation and lightness values within acceptable parameters\n\tconst saturation = getRandomIntInclusive(80, 100);\n\t// highlight\n\tconst xlight = getRandomIntInclusive(84, 92);\n\t// more extreme lightness\n\tconst lighter = getRandomIntInclusive(76, 84);\n\t// very light or white text\n\tconst lightness = getRandomIntInclusive(64, 72);\n\t// mid value used for lightness and saturation\n\tconst midrange = getRandomIntInclusive(48, 64);\n\t// dark highlight\n\tconst lowmid = getRandomIntInclusive(28, 36);\n\t// very dark or black text\n\tconst darkness = getRandomIntInclusive(16, 24);\n\t// more extreme darkness\n\tconst darker = getRandomIntInclusive(0, 12);\n\n\treturn {\n        // raw mixing values\n        hue: hue,\n        complement: complement,\n        analogous: analogous,\n        saturation: saturation,\n        xlight: xlight,\n        lighter: lighter,\n        lightness: lightness,\n        midrange: midrange,\n        lowmid: lowmid,\n        darkness: darkness,\n        darker: darker,\n        // colors\n        huehsl: `hsl(${hue}, ${saturation}%, ${lightness}%)`,\n        complementhsl: `hsl(${complement}, ${saturation}%, ${lightness}%)`,\n        analogoushsl: `hsl(${analogous}, ${saturation}%, ${lightness}%)`,\n        // primary hue variations by lightness\n        huexlighthsl: `hsl(${hue}, ${saturation}%, ${xlight}%)`,\n        huelighterhsl: `hsl(${hue}, ${saturation}%, ${lighter}%)`,\n        huemidhsl: `hsl(${hue}, ${saturation}%, ${midrange}%)`,\n        huelowmidhsl: `hsl(${hue}, ${saturation}%, ${lowmid}%)`,\n        huedarkhsl: `hsl(${hue}, ${saturation}%, ${darkness}%)`,\n        huedarkerhsl: `hsl(${hue}, ${saturation}%, ${darker}%)`,\n        // complement variations by lightness\n        complementxlighthsl: `hsl(${complement}, ${saturation}%, ${xlight}%)`,\n        complementlighterhsl: `hsl(${complement}, ${saturation}%, ${lighter}%)`,\n        complementmidhsl: `hsl(${complement}, ${saturation}%, ${midrange}%)`,\n        complementlowmidhsl: `hsl(${complement}, ${saturation}%, ${lowmid}%)`,\n        complementdarkhsl: `hsl(${complement}, ${saturation}%, ${darkness}%)`,\n        complementdarkerhsl: `hsl(${complement}, ${saturation}%, ${darker}%)`,\n        // analogous variations by lightness\n        analogousxlighthsl: `hsl(${analogous}, ${saturation}%, ${xlight}%)`,\n        analogouslighterhsl: `hsl(${analogous}, ${saturation}%, ${lighter}%)`,\n        analogousmidhsl: `hsl(${analogous}, ${saturation}%, ${midrange}%)`,\n        analogouslowmidhsl: `hsl(${analogous}, ${saturation}%, ${lowmid}%)`,\n        analogousdarkhsl: `hsl(${analogous}, ${saturation}%, ${darkness}%)`,\n        analogousdarkerhsl: `hsl(${analogous}, ${saturation}%, ${darker}%)`\n    };\n};\n"],"names":["getRandomIntInclusive","min","max","Math","floor","random","index","hue","analogous","complement","shift","saturation","xlight","lighter","lightness","midrange","lowmid","darkness","darker","huehsl","complementhsl","analogoushsl","huexlighthsl","huelighterhsl","huemidhsl","huelowmidhsl","huedarkhsl","huedarkerhsl","complementxlighthsl","complementlighterhsl","complementmidhsl","complementlowmidhsl","complementdarkhsl","complementdarkerhsl","analogousxlighthsl","analogouslighterhsl","analogousmidhsl","analogouslowmidhsl","analogousdarkhsl","analogousdarkerhsl"],"mappings":"AAGA,MAAMA,EAAwBA,CAACC,EAAKC,IAC5BC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,IAAMA,EAGtD,IAAAK,EAAA,KAEC,MAAMC,EAAMP,EAAsB,EAAG,KAKrC,IAGIQ,EAHAC,EAAaF,EAAM,IAAMA,EAAM,IAAMA,EAAM,IAI/C,OAAQA,GACP,KAAKA,EAAM,IACVC,EAAYD,EAAM,IAClB,MACD,KAAKA,EAAM,IACVC,EAAYD,EAAM,IAClB,MACD,QACC,IAAIG,EAAQH,EAAM,IAClBC,EAAYE,EAAQ,IAAMA,EAAQ,IAAMA,EAI1C,MAAMC,EAAaX,EAAsB,GAAI,KAEvCY,EAASZ,EAAsB,GAAI,IAEnCa,EAAUb,EAAsB,GAAI,IAEpCc,EAAYd,EAAsB,GAAI,IAEtCe,EAAWf,EAAsB,GAAI,IAErCgB,EAAShB,EAAsB,GAAI,IAEnCiB,EAAWjB,EAAsB,GAAI,IAErCkB,EAASlB,EAAsB,EAAG,IAExC,MAAO,CAEAO,IAAKA,EACLE,WAAYA,EACZD,UAAWA,EACXG,WAAYA,EACZC,OAAQA,EACRC,QAASA,EACTC,UAAWA,EACXC,SAAUA,EACVC,OAAQA,EACRC,SAAUA,EACVC,OAAQA,EAERC,OAAS,OAAMZ,MAAQI,OAAgBG,MACvCM,cAAgB,OAAMX,MAAeE,OAAgBG,MACrDO,aAAe,OAAMb,MAAcG,OAAgBG,MAEnDQ,aAAe,OAAMf,MAAQI,OAAgBC,MAC7CW,cAAgB,OAAMhB,MAAQI,OAAgBE,MAC9CW,UAAY,OAAMjB,MAAQI,OAAgBI,MAC1CU,aAAe,OAAMlB,MAAQI,OAAgBK,MAC7CU,WAAa,OAAMnB,MAAQI,OAAgBM,MAC3CU,aAAe,OAAMpB,MAAQI,OAAgBO,MAE7CU,oBAAsB,OAAMnB,MAAeE,OAAgBC,MAC3DiB,qBAAuB,OAAMpB,MAAeE,OAAgBE,MAC5DiB,iBAAmB,OAAMrB,MAAeE,OAAgBI,MACxDgB,oBAAsB,OAAMtB,MAAeE,OAAgBK,MAC3DgB,kBAAoB,OAAMvB,MAAeE,OAAgBM,MACzDgB,oBAAsB,OAAMxB,MAAeE,OAAgBO,MAE3DgB,mBAAqB,OAAM1B,MAAcG,OAAgBC,MACzDuB,oBAAsB,OAAM3B,MAAcG,OAAgBE,MAC1DuB,gBAAkB,OAAM5B,MAAcG,OAAgBI,MACtDsB,mBAAqB,OAAM7B,MAAcG,OAAgBK,MACzDsB,iBAAmB,OAAM9B,MAAcG,OAAgBM,MACvDsB,mBAAqB,OAAM/B,MAAcG,OAAgBO,MAEhE"}